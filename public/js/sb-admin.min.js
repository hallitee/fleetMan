!function(e){"use strict";e('.navbar-sidenav [data-toggle="tooltip"]').tooltip({template:'<div class="tooltip navbar-sidenav-tooltip" role="tooltip" style="pointer-events: none;"><div class="arrow"></div><div class="tooltip-inner"></div></div>'}),e("#sidenavToggler").click(function(o){o.preventDefault(),e("body").toggleClass("sidenav-toggled"),e(".navbar-sidenav .nav-link-collapse").addClass("collapsed"),e(".navbar-sidenav .sidenav-second-level, .navbar-sidenav .sidenav-third-level").removeClass("show")}),e(".navbar-sidenav .nav-link-collapse").click(function(o){o.preventDefault(),e("body").removeClass("sidenav-toggled")}),e("body.fixed-nav .navbar-sidenav, body.fixed-nav .sidenav-toggler, body.fixed-nav .navbar-collapse").on("mousewheel DOMMouseScroll",function(e){var o=e.originalEvent,t=o.wheelDelta||-o.detail;this.scrollTop+=30*(t<0?1:-1),e.preventDefault()}),e(document).scroll(function(){e(this).scrollTop()>100?e(".scroll-to-top").fadeIn():e(".scroll-to-top").fadeOut()}),e('[data-toggle="tooltip"]').tooltip(),e(document).on("click","a.scroll-to-top",function(o){var t=e(this);e("html, body").stop().animate({scrollTop:e(t.attr("href")).offset().top},1e3,"easeInOutExpo"),o.preventDefault()})}(jQuery);
	var todayDate;
	var dateVal=0;
	var todaySel;
	var tomorrowSel;
	var greaterDays;
	var fault=false;
	var urgent = false;
	var renewal = "";
	$result = [];
	$max = 0;	
	//const notelem;
$(document).ready(function(){
	console.log("started");
	
	setInterval(function(){

		console.log("Every 1 min timing");

	}, 60000);
		
	$("body").on('focusout', '#payDate', function(){	
		console.log($(this).val());
		date = new Date($(this).val());
		switch(renewal.valid_uom){
		case "Day": case "Days":
		date.setDate(date.getDate()+Number(renewal.validity));
		console.log("Am under Days");
		break;
		case "Week": case "Weeks":
		date.setDate(date.getDate()+(Number(renewal.validity)*7));
		console.log("Am under Weeks");
		break;
		case "Month": case "Months":
		date.setMonth(date.getMonth()+Number(renewal.validity));
		console.log("Am under months");
		break;
		case "Year": case "Years":
		date.setFullYear(date.getFullYear()+Number(renewal.validity));
		console.log("Am under Years");
		break;
		default:
		console.log("Nothing again under default");		
		}
		console.log(" Date result: "+ date);
		$("#nextDate").val(("00"+(date.getMonth()+1)).slice(-2)+'/'+("00"+(date.getDate())).slice(-2)+'/'+date.getFullYear());		
		$("input[name='nextDateH']").val(date.getFullYear()+'-'+("00"+(date.getMonth()+1)).slice(-2)+'-'+("00"+(date.getDate())).slice(-2));
	});
	setTimeout(function(){
				$.ajax({
					type: 'GET',
					url: "/loadChart",
					dataType: 'JSON',
					beforeSend: function(xhr)
					{xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
					data: {
					},  
					error: function( xhr ){ 
					// alert("ERROR ON SUBMIT");
				//	console.log("error on submit"+xhr);
					},
					success: function( data ){ 
					 loadChart(data.res, data.max);
					}
					
				});			
			   
			
		},100);
	setTimeout(function(){
			
            $('#mytrip:text:visible:first').focus();
			console.log("should focus from sb admin");
			
        }, 100);
			function notValid(){
				const notelem = document.getElementById("notText");
				if(notelem!=null){
				notelem.addEventListener('focusout', function(){	
				
				opt = document.querySelector("#notUomSel");
				arr = ['', 'Hour', 'Day', 'Week', 'Year'];
				const parent = document.getElementById("notUomSel");
				while (opt.firstChild) {
					opt.firstChild.remove();
				}
				if(notelem.value>1){
					arr.forEach(function(per){
						act = document.createElement("Option");
						act.value = (per!='')? per+'s' :'' ;
						act.innerText = (per!='')? per+'s' : '';
						opt.append(act);						
					});
					
				}else{
						arr.forEach(function(per){
						act = document.createElement("Option");
						act.value = (per!='')? per : '';
						act.innerText = (per!='')? per: '';
						opt.append(act);						
					});
					
					
				}
				}, false);
				}
			}
			notValid();
			function validity(){
				elem = document.querySelector("input[name='validity']");
				if(elem!=null){
				elem.addEventListener('focusout', function(){
				
				opt = document.querySelector("#uomSel");
				arr = ['', 'Day', 'Week', 'Month', 'Year'];
				const parent = document.getElementById("uomSel");
				while (parent.firstChild) {
					parent.firstChild.remove();
				}
				if(elem.value>1){
					arr.forEach(function(per){
						act = document.createElement("Option");
						act.value = (per!='')? per+'s' :'' ;
						act.innerText = (per!='')? per+'s' : '';
						opt.append(act);						
					});
					
				}else{
						arr.forEach(function(per){
						act = document.createElement("Option");
						act.value = (per!='')? per : '';
						act.innerText = (per!='')? per: '';
						opt.append(act);						
					});
					
					
				}
				}, false);
				}
			}
			validity();
		/*	function uomSelect(){
		var elem = document.getElementById("uomSel");
		elem.addEventListener('change', function(){
			val = document.querySelector("input[name='validity']").value;
			if(val && val>1){
			
				elem.childNodes.forEach(function){
					
					opt.value+="s";
					opt.innerText = opt.value;
					
				});
			}
			else{
				elem.childNodes.forEach(function(obj){ 
				elem.removeChild(obj); 
				});
				
			}
		}, false);
		
	}
	uomSelect();
	*/
	$("body").on('change', '#urgent', function(){
		urgent = $(this).prop('checked');
		//console.log("Urgent:  "+ urgent);
	});
	$("body").on('change', 'select[name="renewal"]', function(){
				$.ajax({
					type: 'GET',
					url: "/load/renewal",
					dataType: 'JSON',
					beforeSend: function(xhr)
					{xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
					data: {
					"id": $(this).val()
					},  
					error: function( xhr ){ 
					// alert("ERROR ON SUBMIT");
					console.log("error on submit"+xhr);
					},
					success: function( data ){
					valid = document.querySelector("input[name='expiry']");
					valid.value = data[0].validity+ '  '+data[0].valid_uom ;
					renewal = data[0];
					console.log(data[0].name);	
					
					}
					
				});	
		
	});

	$("body").on('mouseover click', '.decBtn', function(){
		$("#ganotes").prop('required', true);
		$("#gaRem").show();		
	});
	$("body").on('mouseover click', '.actBtn', function(){
		$("#ganotes").prop('required', false);
		$("#gaRem").hide();		
	});	
	$("body").on('mouseover click', '.subBtn', function(){
	($(this).val()=='DISMISS') ? $("#hodnotes").prop('required', true) :  $("#hodnotes").prop('required', false)
	});
	$("body").on('focusout mouseover', '#tripTime,#notes ', function(){
	
		tripTimeFunc();
	
	});
	$("body").on('focusout mouseover', '#tripDate', function(){
		tripDateFunc();
	});
	$("body").on('change', '#dest', function(){
			if($(this).val()=='Others'){
				console.log($(this).parent().prev());
				$(this).parent().prev().prop('class', 'col-md-4');
				$(this).parent().prop('class', 'col-md-4 Others');				
				$(".other").show();
			}else{
				
				if($(this).parent().prop('class')=='col-md-6'){
					
				}else{
					$(".other").hide();
					$(this).parent().prop('class', 'col-md-6');
					$(this).parent().prev().prop('class', 'col-md-6');
				}
				
			}
		});
	$("body").on('change', '#changeDriver', function(){
		console.log($("#reqID").val());
		$.ajax({
					type: 'GET',
					url: "/loaddrivers",
					dataType: 'JSON',
					beforeSend: function(xhr)
					{xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
					data: {
					"driver": $(this).val(),
					"id": $("#reqID").val()
					},  
					error: function( xhr ){ 
					// alert("ERROR ON SUBMIT");
					console.log("error on submit"+xhr);
					},
					success: function( data ){
					console.log(data);		
					if(data.result=='failure'){
						console.log("Data result " + data.result);	
						$("#changeDriver").prop('style', 'border:2px solid red');						
						$(".dispStat").show();
						$(".actBtn").prop('disabled', true);
						$("#statText").text("Driver not available within this time! Please select another driver.");
					}else{
					$("#driver").val(data.DriverAsigned);
						$("#changeDriver").prop('style', false);
						$(".actBtn").prop('disabled', false);
						$(".dispStat").hide();
						$(".actBtn").prop('disabled', false);
					}
					
					}
					
				});	
		
	});
	$("body").on('change', '#availVeh', function(){
		console.log($("#reqID").val());
		$.ajax({
					type: 'GET',
					url: "/loadcars",
					dataType: 'JSON',
					beforeSend: function(xhr)
					{xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
					data: {
					"car": $(this).val(),
					"id": $("#reqID").val()
					},  
					error: function( xhr ){ 
					// alert("ERROR ON SUBMIT");
					console.log("error on submit"+xhr);
					},
					success: function( data ){
					console.log(data);		
					if(data.result=='failure'){
						console.log("Data result " + data.result);	
						$("#availVeh").prop('style', 'border:2px solid red');						
						$(".actBtn").prop('disabled', true);
						$(".dispStat").show();
						$("#statText").text("Car not available within this time! Please select another car.");						
					}else{
					$("#driver").val(data.DriverAsigned);
						$("#availVeh").prop('style', false);
						$(".actBtn").prop('disabled', false);
						$(".dispStat").hide();
					}
					
					}
					
				});	
		
	});
	$("body").on("change", '#location', function(){
		loc = $(this).val();
		//console.log(loc);
				$.ajax({
					type: 'GET',
					url: "/location",
					dataType: 'JSON',
					beforeSend: function(xhr)
					{xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
					data: {
					"loc": loc,					
					},  
					error: function( xhr ){ 
					// alert("ERROR ON SUBMIT");
				//	console.log("error on submit"+xhr);
					},
					success: function( data ){ 
					//console.log("success" + data[0].email);
					//$("#hodemail").val(data.email);
					dest = $("#dest");
					dest.empty();
					$.each(data, function(i, list){
					//	console.log(list);
					dest.append(new Option(list, list))
					});

					}
					
				});			
		 
		
	});
	$('#mytrip').keypress(function(event){
    var keycode = (event.keyCode ? event.keyCode : event.which);
    if(keycode == '13'){
				dtext= $(this).val();
				setTrip(dtext);	
    }
	});
	$("body").on("click", '#tripStat', function(){
		console.log("Trip start click");
		setTrip($("#mytrip").val());
	});
	$("body").on("mouseover focusout click change", '#dept, #location, #dest', function(){
		 var dept = $("select[name='dept']").val();
		 var company = $("select[name='company']").val(); 
		 var hod ='';
		 if(dept!="" && company!=""){
			//console.log(dept +' '+company); 
		$.ajax({
					type: 'GET',
					url: "/getapprover",
					dataType: 'JSON',
					beforeSend: function(xhr)
					{xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
					data: {
					"comp": company,
					"dept": dept,
					},  
					error: function( xhr ){ 
					// alert("ERROR ON SUBMIT");
				//	console.log("error on submit"+xhr);
					},
					success: function( data ){ 
					//console.log("success" + data[0].email);
					//$("#hodemail").val(data.email);
					$.each(data, function(i, list){
					hod += list.email+';';
					$("#hodid").val(list.id);
				//	console.log("HOD VALUE "+$("#hodid").val());
					});
					hod=hod.slice(0,-1);
					$("#hodemail").val(hod);
					
					}
					
				});			
		 
		 
		 }
	 });
	$("body").on('change', '#changeDriver', function(){
		drv = $(this).children("option:selected").text();
		if(drv!=''){
	  $("#driver").val(drv);
		}
	});
	$("body").on("mouseover click", '.decBtn', function(){
		console.log(" Decline button");
		$("#rtnTime").prop('required', false);
	});
	$("body").on("mouseover click", '.actBtn', function(){
			console.log(" Approve button");
		$("#rtnTime").prop('required', true);
	});
	$("body").on("click", '#cancelTrip', function(){
		remBox = $("#canRem");
		if($(remBox).is(":hidden")){
			remBox.show();
		}else{
			if(remBox.val()=='' || remBox.val().length<10){
				remBox.css('border', '1px solid red');
			}
			else{
				
				remBox.css('border', '1px solid green');
				//$("#canTrip").submit();
				$("#cancelTrip").replaceWith("<input type='submit'  class='btn btn-warning btn-block' name='subBtn' value='Cancel Trip'>");
			}
			//remBox.hide();
		}
		
//console.log(remBox.prop('style'));
	});
	$("body").on("mouseover click", '.submt,#notes', function(){
		tripDateFunc();
		tripTimeFunc();
		subBtn = $(".submt");
		if(fault){ 
		subBtn.prop('disabled', true);
		}
		else{ 
		subBtn.prop('disabled', false);
		//$("#reqstore").submit();
		}
		//console.log(" mouse over "+ " fault: "+fault);
	});
	var tripDateFunc = function(){
			loc = $("#location").val();
			console.log("location " + loc);
			tripDate = $("#tripDate");
			//console.log(tripDate.val());
			var today = new Date();	
			var dd = today.getDate();
			var mm = today.getMonth()+1; //January is 0!
			var yyyy = today.getFullYear();

			if(dd<10) {
				dd = '0'+dd
			} 

			if(mm<10) {
				mm = '0'+mm
			} 

			today = yyyy  + '-' + mm + '-' + dd;
			todayDate = today;
			date2 = Date.parse(today);
			date1 = Date.parse(tripDate.val());
			date11 =  Number(date1.toString().slice(0,6));
			date22 =  Number(date2.toString().slice(0,6));
			date111 =  Number(date1.toString().slice(0,5));
			date222 =  Number(date2.toString().slice(0,5));			
			//console.log("date1 "+date11+" date2: "+date22);
			((date11-date22)>1) ? tomorrowSel=true : tomorrowSel=false ;
			(date11==date22) ? todaySel=true : todaySel=false ;
			((date11-date22)>12) ? greaterDays=true : greaterDays=false;
			//console.log("greaterDays selected " + greaterDays)
		//	console.log("date1 "+date11+" date2: "+date22 + " today Selected " +todaySel);
	//		console.log("date111 "+date111+" date222: "+date222 + " tomorrow Selected " +tomorrowSel);
			if(loc=="WITHIN LAGOS"){
		//		console.log("Within lagos operations");
			dateVal = date11<date22;
			if((date1<date2) && !urgent){
		//		console.log("True for date compare");
				$('.errDate').text("Invalid date!");
				tripDate.prop('class','input-md form-control is-invalid');
				fault=true;
			}
			else{
				fault=false;
				$('.errDate').text("");
				tripDate.prop('class','input-md form-control');
				//console.log("False for date compare");
			}
			}else{      // OUTSIDE LAGOS
		//	console.log("Outside lagos operations");
			dateVal = ((date11-date22)<6);
				if((date1>date2) && !todaySel){
				fault=false;
				$('.errDate').text("");
				tripDate.prop('class','input-md form-control');
				//console.log("False for date compare");		
				
			}
			else{

				////console.log("True for date compare");
				if(urgent){
				fault=false;
				$('.errDate').text("");
				tripDate.prop('class','input-md form-control');	
				}else{
				$('.errDate').text("Invalid date!");
				tripDate.prop('class','input-md form-control is-invalid');
				fault=true;
				}
			}
				
			}
		//console.log(dateVal);
	}
	var tripTimeFunc = function(){
		loc = $("#location").val();
			tripTime = $("#tripTime");
			var time = tripTime.val();
			time = time.split(":");
		//console.log(dateVal);
		if(dateVal && !urgent){
			fault=true;
			$(".errTime").text("Invalid time! check date.");
			tripTime.prop('class','input-md form-control is-invalid');
		}
		else{
			
			$(".errTime").text("");
			tripTime.prop('class','input-md form-control');
		if(loc=='WITHIN LAGOS'){
		if(todaySel && !urgent){
			//console.log(todaySel+" i was here");
			if(time[0]>=7 && time[0]<=18){
			 
			d = new Date();
			if(time[0]-d.getHours()>1){				
			$(".errTime").text("");
			tripTime.prop('class','input-md form-control');				
			fault=false;
			}else{
				if(time[0]-d.getHours()==1){
					calc = (Number(60-d.getMinutes())+Number(time[1]));
				//	console.log("Time diff : "+ calc);
					if(calc>=60){
						fault=false;
						$(".errTime").text("");
						tripTime.prop('class','input-md form-control');		
					
					}
					else{
						fault=true;
						$(".errTime").text("Invalid time! book 1hr ahead");
						tripTime.prop('class','input-md form-control is-invalid');
						
						
					}
				}else{
					fault=true;
			$(".errTime").text("Invalid time! book 1hr ahead");
			tripTime.prop('class','input-md form-control is-invalid');	
				}			
				
			}
				
			}else{
				fault=true;
			$(".errTime").text("Invalid time! Not office hours");
			tripTime.prop('class','input-md form-control is-invalid');
			}
			
			}else{ 		// check other than today 	
			
			
			if(time[0]>=7 && time[0]<=18){
				// check time within office hours
				
				
			$(".errTime").text("");
			fault=false;
			tripTime.prop('class','input-md form-control');				
			}else{
				//Time not  within office hours
				fault=true;
			$(".errTime").text("Invalid time! Not office hours");
			tripTime.prop('class','input-md form-control is-invalid');
			}
			
			}
	
		}else{ // OUTSIDE LAGOS
		
		if(tomorrowSel && !urgent){
			
			if(time[0]>=7 && time[0]<=18){
				// check time within office hours		
			d = new Date();
			if(time[0]>=d.getHours()){
				if(time[0]==d.getHours()){
					if(time[1]>=d.getMinutes()){
							$(".errTime").text("");
							fault=false;
							tripTime.prop('class','input-md form-control');						
						
					}
					else{
								//Time not  within office hours
							fault=true;
							$(".errTime").text("Invalid time! book 24hr ahead");
							tripTime.prop('class','input-md form-control is-invalid');						
										
					}
					
				}else{
								$(".errTime").text("");
							fault=false;
							tripTime.prop('class','input-md form-control');
				}			
			}else{
				//console.log(" I am presently here");
			if(greaterDays){
				$(".errTime").text("");
							fault=false;
							tripTime.prop('class','input-md form-control');

			}
			else{//Time not  within office hours
			fault=true;
			$(".errTime").text("Invalid time! book 24hr ahead");
			tripTime.prop('class','input-md form-control is-invalid');
			}
			}
		
			
			}else{
				//Time not  within office hours
				fault=true;
			$(".errTime").text("Invalid time! Not office hours");
			tripTime.prop('class','input-md form-control is-invalid');
			}
		
		
		
		
		}
		else{
			if(time[0]>=7 && time[0]<=18){
				// check time within office hours
				
				
			$(".errTime").text("");
			fault=false;
			tripTime.prop('class','input-md form-control');				
			}else{
				//Time not  within office hours
				if(urgent){}else{
				fault=true;
			$(".errTime").text("Invalid time! Not office hours");
			tripTime.prop('class','input-md form-control is-invalid');
						}
			
			}
			
		}
		
		}
		
		}
		//console.log($(this).val()+" Today date"+todayDate);
	}
	var duration = function(a, b){
var start = new Date(a);
var end = new Date(b);
var diffMs = (end - start); // milliseconds between now & Christmas
var diffDays = Math.floor(diffMs / 86400000); // days
var diffHrs = Math.floor((diffMs % 86400000) / 3600000); // hours
var diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000); // minutes
outDur = "";
if(diffDays){
outDur=diffDays+" day, ";
}
if(diffHrs){
	
	outDur+=diffHrs+" hours, ";
}
if(diffMins){
	
	outDur+=diffMins+" mins";
}
return  outDur;
	}
	var setTrip = function(txt){
		if(txt.length>10){
			txt=txt.slice(0,10);
		}
				$.ajax({
					type: 'GET',
					url: "/loadtrip",
					dataType: 'JSON',
					beforeSend: function(xhr)
					{xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
					data: {
					"code": txt,					
					},  
					error: function( xhr ){ 
					// alert("ERROR ON SUBMIT");
				//	console.log("error on submit"+xhr);
					},
					success: function( data ){
								
					if(data!=''){
					console.log("success" + data);
					//$("#hodemail").val(data.email);
					dur="";
					act="";
					if(data.tripEnd){
						tripEnd = "<tr><th>Trip Return:</th><td>"+data.tripEnd+"</td></tr>";
						tripStat = "COMPLETED";
						actual = duration(data.tripStart, data.tripEnd);
						console.log(actual);
						act="<tr><th>Actual Trip Duration:</th><td>"+actual+"</td></tr>";
						dur = duration(data.tripStart, data.retTime);
					console.log(dur);
					}
					else{ 
					act="";
					tripEnd="";
					tripStat="STARTED";
					dur = duration(data.tripStart, data.retTime);
					console.log(dur);
					}
					tbody = $("#tbody1");
					tbody.empty();
					tbody.append("<tr><td colspan='2'><input name='trip' id='mytrip' value='' class='form-control'/></td></tr><tr><th>Driver:</th><td>"+data.driver.drvName+"</td></tr><tr><th>Car:</th><td>"+data.car.Make+' '+data.car.Model+"</td></tr><tr><th>Registration:</th><td>"+data.car.RegNo+"</td></tr><tr><th>Destination:</th><td>"+data.reqDest+"</td></tr><tr><th>Trip Start:</th><td>"+data.tripStart+"</td></tr>"+tripEnd +"<tr><th>Trip End:</th><td>"+data.retTime+"</td></tr><tr><th>Expected Trip Duration:</th><td>"+dur+"</td>"+act+"<tr><th>Trip Status:</th><td><div class='h5 text-primary'>"+tripStat +"</div></td></tr>");		

							}else{
									
									tbody = $("#tbody1");
									tbody.empty();
									tbody.append("<tr><td colspan='2' class='text-danger'><input name='trip' id='mytrip' value='Trip information not yet available.' class='form-control h4 text-danger'/></td></tr>");
									
								}
					
					
					}
					
				});			
		 
		 
	}
	var loadChart = function($result, $max){
	var ctx = document.getElementById("myAreaChart");	
	// console.log("$result " + $result);
	var myLineChart = new Chart(ctx, {
			  type: 'line',
			  data: {
				labels: ["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"],
				datasets: [{
				  label: "Request",
				  lineTension: 0.3,
				  backgroundColor: "rgba(2,117,216,0.2)",
				  borderColor: "rgba(2,117,216,1)",
				  pointRadius: 5,
				  pointBackgroundColor: "rgba(2,117,216,1)",
				  pointBorderColor: "rgba(255,255,255,0.8)",
				  pointHoverRadius: 5,
				  pointHoverBackgroundColor: "rgba(2,117,216,1)",
				  pointHitRadius: 20,
				  pointBorderWidth: 2,
				  data:$result,
				}],
			  },
			  options: {
				scales: {
				  xAxes: [{
					time: {
					  unit: 'date'
					},
					gridLines: {
					  display: false
					},
					ticks: {
					  maxTicksLimit: 7
					}
				  }],
				  yAxes: [{
					ticks: {
					  min: 0,
				  max: ($max+10),
					  maxTicksLimit: 5
					},
					gridLines: {
					  color: "rgba(0, 0, 0, .125)",
					}
				  }],
				},
				legend: {
				  display: false
				}
			  }
			});
}
	
	
	});
	
